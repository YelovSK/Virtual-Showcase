#pragma kernel Copy
#pragma kernel CopyMirrored

// Textures
Texture2D<float4> InputImage;
RWTexture2D<float4> OutputImage;

// Pos
uint StartY;

// Source
uint SourceWidth;
uint SourceHeight;

// Target
uint TargetWidth;
uint TargetHeight;

// Constants
static const float GAMMA_FIX = 1.0 / 2.2;
static const float4 BLACK = float4(0, 0, 0, 1);

[numthreads(16, 16, 1)]
void Copy(uint3 id : SV_DispatchThreadID)
{
    // Outside of the source image -> black borders.
    if (id.y >= SourceHeight + StartY || id.y <= StartY)
    {
        OutputImage[id.xy] = BLACK;
        return;
    }

    const float4 color = InputImage[float2(id.x, id.y - StartY)];
    OutputImage[id.xy] = pow(color, GAMMA_FIX);
}

[numthreads(16, 16, 1)]
void CopyMirrored(uint3 id : SV_DispatchThreadID)
{
    // Outside of the source image -> black borders.
    if (id.y >= SourceHeight + StartY || id.y <= StartY)
    {
        OutputImage[id.xy] = BLACK;
        return;
    }

    const float4 color = InputImage[float2(TargetWidth - id.x, id.y - StartY)];
    OutputImage[id.xy] = pow(color, GAMMA_FIX);
}